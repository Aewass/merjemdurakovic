---
import Layout from '../../../layouts/Layout.astro';
import Footer from '../../../components/Footer.astro';
import { ArrowLeft, Maximize2, ChevronLeft, ChevronRight, X } from 'lucide-astro';
import { getLangFromUrl, useTranslations, useTranslatedPath } from '../../../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

// Update the types for our data structure
type CatalogImage = {
  src: string;
  alt: string;
  caption?: string;
};

type CatalogItem = {
  name: string;
  description: string;
  images: CatalogImage[];
};

type CategoryData = {
  number: string;
  title: string;
  category: string;
  description: string;
  items: CatalogItem[];
};

export function getStaticPaths() {
  return [
    {
      params: { id: 'branding' },
      props: {
        category: {
          number: "01",
          title: "Brending",
          category: "Kategorija",
          description: "Sistem vizuelnog identiteta za Auto Centar Mint, baziran na postojećem logotipu i paleti boja. Proširen u kompletnu knjigu smernica brenda sa definisanom tipografijom, layoutom, ikonografijom, vizuelnim elementima i pravilima korišćenja. Primenjen na poslovne kartice, pisma, brendirane materijale poput šolja i odeće.",
          items: [
            {
              name: "AC Mint",
              description: "Identitet brenda",
              images: [
                { 
                  src: "/branding/branding-ac-mint/1.jpg", 
                  alt: "AC Mint brand identity",
                  caption: "Logo design and visual identity" 
                },
                { 
                  src: "/branding/branding-ac-mint/2.jpg", 
                  alt: "AC Mint logo design",
                  caption: "Logo variations and applications" 
                },
                { 
                  src: "/branding/branding-ac-mint/3.jpg", 
                  alt: "AC Mint brand applications",
                  caption: "Brand applications and stationery" 
                },
                { 
                  src: "/branding/branding-ac-mint/4.jpg", 
                  alt: "AC Mint packaging design",
                  caption: "Packaging design solutions" 
                },
                { 
                  src: "/branding/branding-ac-mint/5.jpg", 
                  alt: "AC Mint brand guidelines",
                  caption: "Brand style guide and standards" 
                },
                { 
                  src: "/branding/branding-ac-mint/6.jpg", 
                  alt: "AC Mint brand guidelines",
                  caption: "Brand style guide and standards" 
                },
                { 
                  src: "/branding/branding-ac-mint/7.jpg", 
                  alt: "AC Mint brand guidelines",
                  caption: "Brand style guide and standards" 
                },
                { 
                  src: "/branding/branding-ac-mint/8.jpg", 
                  alt: "AC Mint brand guidelines",
                  caption: "Brand style guide and standards" 
                },
                { 
                  src: "/branding/branding-ac-mint/9.jpg", 
                  alt: "AC Mint brand guidelines",
                  caption: "Brand style guide and standards" 
                },
                { 
                  src: "/branding/branding-ac-mint/10.jpg", 
                  alt: "AC Mint brand guidelines",
                  caption: "Brand style guide and standards" 
                },
                { 
                  src: "/branding/branding-ac-mint/11.jpg", 
                  alt: "AC Mint brand guidelines",
                  caption: "Brand style guide and standards" 
                },
                { 
                  src: "/branding/branding-ac-mint/12.jpg", 
                  alt: "AC Mint brand guidelines",
                  caption: "Brand style guide and standards" 
                },
                { 
                  src: "/branding/branding-ac-mint/13.jpg", 
                  alt: "AC Mint brand guidelines",
                  caption: "Brand style guide and standards" 
                },
                { 
                  src: "/branding/branding-ac-mint/14.jpg", 
                  alt: "AC Mint brand guidelines",
                  caption: "Brand style guide and standards" 
                },
                { 
                  src: "/branding/branding-ac-mint/15.jpg", 
                  alt: "AC Mint brand guidelines",    
                  caption: "Brand style guide and standards" 
                },
                { 
                  src: "/branding/branding-ac-mint/16.jpg", 
                  alt: "AC Mint brand guidelines",
                  caption: "Brand style guide and standards"  
                },
                { 
                  src: "/branding/branding-ac-mint/17.jpg", 
                  alt: "AC Mint brand guidelines",
                  caption: "Brand style guide and standards"  
                },  
                { 
                  src: "/branding/branding-ac-mint/18.jpg", 
                  alt: "AC Mint brand guidelines",
                  caption: "Brand style guide and standards"  
                },
                { 
                  src: "/branding/branding-ac-mint/19.jpg", 
                  alt: "AC Mint brand guidelines",
                  caption: "Brand style guide and standards"  
                },
                { 
                  src: "/branding/branding-ac-mint/20.jpg", 
                  alt: "AC Mint brand guidelines",
                  caption: "Brand style guide and standards"  
                },
                { 
                  src: "/branding/branding-ac-mint/21.jpg", 
                  alt: "AC Mint brand guidelines",
                  caption: "Brand style guide and standards"  
                },
                { 
                  src: "/branding/branding-ac-mint/22.jpg", 
                  alt: "AC Mint brand guidelines",
                  caption: "Brand style guide and standards"  
                },
                { 
                  src: "/branding/branding-ac-mint/23.jpg", 
                  alt: "AC Mint brand guidelines",
                  caption: "Brand style guide and standards"    
                },
                { 
                  src: "/branding/branding-ac-mint/24.jpg", 
                  alt: "AC Mint brand guidelines",
                  caption: "Brand style guide and standards"  
                },
                { 
                  src: "/branding/branding-ac-mint/25.jpg", 
                  alt: "AC Mint brand guidelines",
                  caption: "Brand style guide and standards"  
                }
              ]
            }
          ]
        } as CategoryData
      }
    },
    {
      params: { id: 'catalogs' },
      props: {
        category: {
          number: "02",
          title: "Brošure i Katalozi",
          category: "Kategorija",
          description: "Ova sekcija prikazuje štampane materijale kao što su brošure, katalozi, izveštaji i vodiči iz različitih oblasti. Svaki projekat odražava stil brenda, ton i vizuelni jezik prilagođen svom kontekstu.",
          items: [
            {
              name: "iForm",
              description: "Izveštaj o Ugljičnom Otisku",
              images: [
                { 
                  src: "/catalogs/catalog-iform/1.png", 
                  alt: "iform catalog page 1",
                  caption: "Product showcase page" 
                },
                { 
                  src: "/catalogs/catalog-iform/2.png", 
                  alt: "iform catalog page 2",
                  caption: "Technical specifications" 
                }
              ]
            },
            {
              name: "Ležaj Trade",
              description: "Katalog za Program Industrijskih Prodaja",
              images: [
                { src: "/catalogs/catalog-lezaj-trade/2.png", alt: "Lezaj Trade catalog page 1" },
                { src: "/catalogs/catalog-lezaj-trade/3.png", alt: "Lezaj Trade catalog page 3" },
              ]
            },
            {
              name: "Mega Trans",
              description: "Izveštaj o Ugljičnom Otisku",
              images: [
                { src: "/catalogs/catalog-mega/1.png", alt: "Mega catalog page 1" },
                { src: "/catalogs/catalog-mega/2.png", alt: "Mega catalog page 2" },
              ]
            },
            {
              name: "Shams Travel",
              description: "Katalog za Turističku Agenciju i Njihove Ponude",
              images: [
                { src: "/catalogs/catalog-shams/2.png", alt: "Shams catalog page 2" },
                { src: "/catalogs/catalog-shams/3.png", alt: "Shams catalog page 3" }
              ]
            },
            {
              name: "Stanić",
              description: "Izveštaj o Ugljičnom Otisku",
              images: [
                { src: "/catalogs/catalog-stanic/1.png", alt: "Stanic catalog page 1" },
                { src: "/catalogs/catalog-stanic/3.jpg", alt: "Stanic catalog page 3" },
              ]
            },
            {
              name: "ZGI",
              description: "Izveštaj o Ugljičnom Otisku za ZGI 2023. i 2024.",
              images: [
                { src: "/catalogs/catalog-zgi/1.jpg", alt: "ZGI catalog page 1" },
                { src: "/catalogs/catalog-zgi/2.jpg", alt: "ZGI catalog page 2" },
                { src: "/catalogs/catalog-zgi/3.jpg", alt: "ZGI catalog page 3" },
                { src: "/catalogs/catalog-zgi2/1.jpg", alt: "ZGI Vol.2 catalog page 1" },
                { src: "/catalogs/catalog-zgi2/2.jpg", alt: "ZGI Vol.2 catalog page 2" },
                { src: "/catalogs/catalog-zgi2/3.jpg", alt: "ZGI Vol.2 catalog page 3" }
              ]
            },
           
          ]
        } as CategoryData
      }
    },
    {
      params: { id: 'visit-cards' },
      props: {
        category: {
          number: "02",
          title: "Vizit Kartice",
          category: "Kategorija",
          description: "Dizajni poslovnih kartica koji kombinuju jasnu strukturu, snažnu tipografiju i detalje materijala da ostave trajan utisak. Svaka kartica odražava identitet brenda dok ostaje funkcionalna, čitljiva i vizuelno izrazita.",
          items: [
            {
              name: "Ležaj Trade Dizajn Poslovne Kartice",
              description: "",
              images: [
                { 
                  src: "/visit-cards/visit-card-lezaj-trade/1.jpg", 
                  alt: "Ležaj Trade visit card",
                  caption: "Front design" 
                }
              ]
            },
            {
              name: "ZerroMax Dizajn Poslovne Kartice",
              description: "",
              images: [
                { 
                  src: "/visit-cards/visit-card-zerro-max/2.jpg", 
                  alt: "ZerroMax visit card",
                  caption: "Complete business card design" 
                }
              ]
            }
          ]
        } as CategoryData
      }
    },
    {
      params: { id: 'books' },
      props: {
        category: {
          number: "03",
          title: "Dizajn Korica",
          category: "Kategorija",
          description: "Ova sekcija prikazuje moj rad na dizajnu knjiga, gde se fokusiram na kreiranje korica. U svojim dizajnima, posvećujem pažnju tipografiji, kompoziciji i estetici, dok se pridržavam standarda za štampane i digitalne formate.",
          items: [
            {
              name: "Dramaturgija Evropskog Lutkarstva Fragmenti",
              description: "Dizajn korica za knjigu o lutkarstvu",
              images: [
                { 
                  src: "/books/book/1.jpg", 
                  alt: "Book design page 1",
                  caption: "Cover design" 
                },
                { 
                  src: "/books/book/2.jpg", 
                  alt: "Book design page 2",
                  caption: "Internal layout" 
                },
                { 
                  src: "/books/book/3.jpg", 
                  alt: "Book design page 3",
                  caption: "Chapter opening page" 
                }
              ]
            }
          ]
        } as CategoryData
      }
    },
    {
      params: { id: 'print-media' },
      props: {
        category: {
          number: "04",
          title: "Razni Štampani Mediji",
          category: "Kategorija",
          description: "Moj portfolio štampanih medija prikazuje svestrane dizajnerske rešenja kroz različite formate uključujući letke, fascikle i trostruke brošure. Svaki komad je pažljivo dizajniran da efikasno komunicira klijentovu poruku kroz strateško korišćenje layouta, tipografije i vizuelnih elemenata. Prioritet mi je i estetska privlačnost i praktična funkcionalnost, osiguravajući da svaki dizajn služi svojoj nameni dok održava vizuelni utisak.",
          items: [
          {
              name: "Express Wood",
              description: "Dizajn glave pisma",
              images: [
                { 
                  src: "/print-media/memorandum-express/1.jpg", 
                  alt: "Express Wood memorandum page 1",
                  caption: "Letterhead design" 
                },
              ]
            },
            {
              name: "ZerroMax",
              description: "Dizajn fascikle",
              images: [
                { 
                  src: "/print-media/fascicle-zerromax/1.jpg", 
                  alt: "Zerromax folder design page 1",
                  caption: "Front cover design" 
                },
                { 
                  src: "/print-media/fascicle-zerromax/2.jpg", 
                  alt: "Zerromax folder design page 2",
                  caption: "Interior spread" 
                }
              ]
            },
            {
              name: "Begović BH d.o.o.",
              description: "Promotivni letak",
              images: [
                { 
                  src: "/print-media/flyer-adblue/1.jpg", 
                  alt: "AdBlue flyer design",
                  caption: "Single page promotional flyer" 
                }
              ]
            },
            {
              name: "Pogrebno Preduzeće Palma",
              description: "Promotivni letak",
              images: [
                { 
                  src: "/print-media/flyer-palma/1.jpg", 
                  alt: "Palma flyer design",
                  caption: "Product promotion flyer" 
                }
              ]
            },
            {
              name: "Phoenix Restaurant",
              description: "Promotivni letak",
              images: [
                { 
                  src: "/print-media/flyer-phoenix/1.jpg", 
                  alt: "Phoenix flyer design",
                  caption: "Event promotional material" 
                }
              ]
            },
            {
              name: "Shams Travel",
              description: "Promotivni letak",
              images: [
                { 
                  src: "/print-media/flyer-shams/1.jpg", 
                  alt: "Shams flyer design",
                  caption: "Product showcase flyer" 
                }
              ]
            },
            {
              name: "Artane d.o.o. Sarajevo",
              description: "Trostruka brošura",
              images: [
                { 
                  src: "/print-media/trifold-artane/1.jpg", 
                  alt: "Artane trifold brochure page 1",
                  caption: "Front panel design" 
                },
                { 
                  src: "/print-media/trifold-artane/2.jpg", 
                  alt: "Artane trifold brochure page 2",
                  caption: "Interior panels layout" 
                },
                { 
                  src: "/print-media/trifold-artane/3.jpg", 
                  alt: "Artane trifold brochure page 3",
                  caption: "Back panel design" 
                }
              ]
            }
          ]
        } as CategoryData
      }
    },
    {
      params: { id: 'social-media' },
      props: {
        category: {
          number: "05",
          title: "Dizajn Društvenih Mreža",
          category: "Kategorija",
          description: "Moj rad na dizajnu društvenih mreža fokusira se na kreiranje privlačnog i vizuelno atraktivnog sadržaja koji efikasno komunicira poruke brenda kroz različite platforme. Svaki dizajn je kreiran da privuče pažnju, potakne angažovanost i održi konzistentnost brenda dok se prilagođava jedinstvenim zahtevima različitih kanala društvenih mreža.",
          items: [
            {
              name: "Begović BH d.o.o.",
              description: "Sadržaj društvenih mreža",
              images: [
                { src: "/social-media/social-adblue/1.jpg", alt: "AdBlue social media design 1" },
                { src: "/social-media/social-adblue/2.jpg", alt: "AdBlue social media design 2" },
                { src: "/social-media/social-adblue/4.jpg", alt: "AdBlue social media design 3" },
                { src: "/social-media/social-adblue/3.jpg", alt: "AdBlue social media design 4" },
                { src: "/social-media/social-adblue/5.jpg", alt: "AdBlue social media design 5" },
              ]
            },
            {
              name: "Doma d.o.o.",
              description: "Sadržaj društvenih mreža",
              images: [
                { src: "/social-media/social-doma/3.jpg", alt: "Doma social media design 1" },
                { src: "/social-media/social-doma/4.jpg", alt: "Doma social media design 2" },
                { src: "/social-media/social-doma/5.jpg", alt: "Doma social media design 3" },
                { src: "/social-media/social-doma/1.jpg", alt: "Doma social media design 4" },
                { src: "/social-media/social-doma/2.jpg", alt: "Doma social media design 5" },
              ]
            },
            {
              name: "Eurotim Company d.o.o.",
              description: "Sadržaj društvenih mreža",
              images: [
                { src: "/social-media/social-eurotim/1.jpg", alt: "Eurotim social media design 1" },
                { src: "/social-media/social-eurotim/4.jpg", alt: "Eurotim social media design 2" },
                { src: "/social-media/social-eurotim/2.jpg", alt: "Eurotim social media design 3" },
                { src: "/social-media/social-eurotim/3.jpg", alt: "Eurotim social media design 4" },
                { src: "/social-media/social-eurotim/5.jpg", alt: "Eurotim social media design 5" },
              ]
            },
            {
              name: "Mehanizmi.ba",
              description: "Sadržaj društvenih mreža",
              images: [
                { src: "/social-media/social-mehanizmi/1.png", alt: "Mehanizmi social media design 1" },
                { src: "/social-media/social-mehanizmi/2.png", alt: "Mehanizmi social media design 2" },
                { src: "/social-media/social-mehanizmi/3.png", alt: "Mehanizmi social media design 3" },
                { src: "/social-media/social-mehanizmi/4.png", alt: "Mehanizmi social media design 4" },
                { src: "/social-media/social-mehanizmi/5.png", alt: "Mehanizmi social media design 5" },
              ]
            },
            {
              name: "Rework",
              description: "Sadržaj društvenih mreža",
              images: [
                { src: "/social-media/social-rework/1.jpg", alt: "Rework social media design 1" },
                { src: "/social-media/social-rework/2.jpg", alt: "Rework social media design 2" },
                { src: "/social-media/social-rework/3.jpg", alt: "Rework social media design 3" },
                { src: "/social-media/social-rework/4.jpg", alt: "Rework social media design 4" },
                { src: "/social-media/social-rework/5.jpg", alt: "Rework social media design 5" },
              ]
            }
          ]
        } as CategoryData
      }
    }
  ];
}

const { id } = Astro.params;
const { category } = Astro.props;
---

<Layout title={`${category.title} - ${category.category}`}>
  <main class="relative min-h-screen">
    <div class="fixed inset-0">
      <div class={`absolute inset-0 bg-[radial-gradient(circle_at_top,_var(--tw-gradient-stops))] ${
        id === 'visit-cards'
          ? 'from-rose-200/40 via-rose-100/30 to-transparent' 
          : id === 'books'
            ? 'from-emerald-200/40 via-emerald-100/30 to-transparent'
            : id === 'print-media'
              ? 'from-amber-200/40 via-amber-100/30 to-transparent'
              : id === 'branding'
                ? 'from-indigo-200/40 via-indigo-100/30 to-transparent'
                : id === 'social-media'
                  ? 'from-cyan-200/40 via-cyan-100/30 to-transparent'
                  : 'from-purple-200/40 via-purple-100/30 to-transparent'
      }`}></div>
    </div>

    <div class="relative">
      <article class="pt-24 pb-24">
        <div class="max-w-6xl mx-auto px-6 sm:px-8">
          <!-- Back Button -->
          <a 
            href={translatePath('/#portfolio')} 
            class={`
              inline-flex 
              items-center 
              gap-2 
              text-gray-500 
              ${
                id === 'visit-cards' ? 'hover:text-rose-600' : 
                id === 'books' ? 'hover:text-emerald-600' : 
                id === 'print-media' ? 'hover:text-amber-600' :
                id === 'branding' ? 'hover:text-indigo-600' :
                id === 'social-media' ? 'hover:text-cyan-600' :
                'hover:text-purple-600'
              }
              transition-colors 
              duration-300 
              mb-12 
              group
            `}
          >
            <ArrowLeft class="w-4 h-4 group-hover:-translate-x-1 transition-transform duration-300" />
            <span class="text-sm">{t('category.back_to_portfolio')}</span>
          </a>

          <!-- Header -->
          <header class="mb-16">
            <div>
              <div class={`flex items-center gap-2 ${
                id === 'visit-cards' ? 'text-rose-600' : 
                id === 'books' ? 'text-emerald-600' : 
                id === 'print-media' ? 'text-amber-600' :
                id === 'branding' ? 'text-indigo-600' :
                id === 'social-media' ? 'text-cyan-600' :
                'text-purple-600'
              } mb-6`}>
                <span class="font-mono">{category.number}</span>
                <span class="text-gray-300">—</span>
                <span>{t('portfolio.category')}</span>
              </div>
              <p class="text-xl text-gray-600 max-w-2xl">
                {category.description}
              </p>
            </div>
          </header>

          <!-- Catalogs List -->
          <div class="space-y-40">
            {category.items.map((item, itemIndex) => (
              <div class="catalog-item">
                <!-- Text Section -->
                <div class="mb-12">
                  <h2 class="text-4xl font-bold mb-4">{item.name}</h2>
                  <p class="text-lg text-gray-600 mb-8 max-w-4xl">{item.description}</p>
                  <div class="flex items-center">
                    <span class={`inline-flex items-center py-1.5 px-3 ${
                      id === 'visit-cards' ? 'bg-rose-50/70' : 
                      id === 'books' ? 'bg-emerald-50/70' : 
                      id === 'print-media' ? 'bg-amber-50/70' :
                      id === 'branding' ? 'bg-indigo-50/70' :
                      id === 'social-media' ? 'bg-cyan-50/70' :
                      'bg-purple-50/70'
                    } text-sm text-gray-800 rounded-full`}>
                      <span class={`w-1.5 h-1.5 ${
                        id === 'visit-cards' ? 'bg-rose-500' : 
                        id === 'books' ? 'bg-emerald-500' : 
                        id === 'print-media' ? 'bg-amber-500' :
                        id === 'branding' ? 'bg-indigo-500' :
                        id === 'social-media' ? 'bg-cyan-500' :
                        'bg-purple-500'
                      } rounded-full mr-2`}></span>
                      {item.images.length} {item.images.length === 1 ? t('category.image') : t('category.images')}
                    </span>
                  </div>
                </div>
                
                <!-- Swiper Carousel OR Social Media Grid OR Branding Vertical Layout -->
                {id === 'social-media' ? (
                  <!-- Social Media Grid Layout (Desktop) / Slider (Mobile/Tablet) -->
                  <div class="social-media-container">
                    <!-- Desktop Grid -->
                    <div class={`social-media-grid images-${Math.min(item.images.length, 5)} hidden lg:grid`}>
                      {item.images.slice(0, 5).map((image, index) => (
                        <div class={`grid-item item-${index + 1}`}>
                          <div class="relative w-full h-full group cursor-pointer overflow-hidden rounded-2xl">
                            <img 
                              src={image.src} 
                              alt={image.alt || `${item.name} image ${index + 1}`}
                              loading={index === 0 ? "eager" : "lazy"}
                              decoding="async"
                              fetchpriority={index === 0 ? "high" : "auto"}
                              class="w-full h-full object-cover transition-all duration-500 ease-out group-hover:scale-[1.02]"
                              data-fullview={image.src}
                            />
                            
                            {/* Subtle hover overlay */}
                            <div class="absolute inset-0 bg-black/0 transition-all duration-500 ease-out group-hover:bg-black/5 rounded-2xl"></div>
                            
                            {/* Fullscreen button */}
                            <button 
                              class="fullscreen-btn absolute top-3 right-3 bg-white/90 backdrop-filter backdrop-blur-sm p-2 rounded-full shadow-lg opacity-0 group-hover:opacity-100 transition-all duration-300 ease-out hover:bg-white hover:scale-105 hover:shadow-xl z-10"
                              data-fullview={image.src}
                              data-alt={image.alt}
                            >
                              <Maximize2 class="w-4 h-4 text-cyan-600" />
                            </button>
                          </div>
                        </div>
                      ))}
                    </div>
                    
                    <!-- Mobile/Tablet Slider -->
                    <div class={`category-swiper-${itemIndex} relative lg:hidden`}>
                      <div class="swiper-container relative rounded-2xl overflow-hidden">
                        <div class="swiper-wrapper">
                          {item.images.map((image, index) => (
                            <div class="swiper-slide">
                              <div class="relative w-full group cursor-pointer">
                                <img 
                                  src={image.src} 
                                  alt={image.alt || `${item.name} image ${index + 1}`}
                                  loading={index === 0 ? "eager" : "lazy"}
                                  decoding="async"
                                  fetchpriority={index === 0 ? "high" : "auto"}
                                  class="w-full h-auto object-contain rounded-2xl transition-all duration-500 ease-out group-hover:scale-[1.02]"
                                  data-fullview={image.src}
                                />
                                
                                {/* Controls float over the image */}
                                <div class="absolute inset-0 bg-black/0 transition-all duration-500 ease-out group-hover:bg-black/5 rounded-2xl"></div>
                                
                                {/* Fullscreen button */}
                                <button 
                                  class="fullscreen-btn absolute top-4 right-4 bg-white/90 backdrop-filter backdrop-blur-sm p-2.5 rounded-full shadow-lg opacity-0 group-hover:opacity-100 transition-all duration-300 ease-out hover:bg-white hover:scale-105 hover:shadow-xl z-10"
                                  data-fullview={image.src}
                                  data-alt={image.alt}
                                >
                                  <Maximize2 class="w-5 h-5 text-cyan-600" />
                                </button>
                              </div>
                            </div>
                          ))}
                        </div>
                        
                        {/* Navigation buttons - only show if more than 1 image */}
                        {item.images.length > 1 && (
                          <>
                            <button class={`swiper-button-prev category-nav-btn category-nav-prev-${itemIndex}`}>
                              <ChevronLeft class="w-7 h-7 text-cyan-600" />
                            </button>
                            <button class={`swiper-button-next category-nav-btn category-nav-next-${itemIndex}`}>
                              <ChevronRight class="w-7 h-7 text-cyan-600" />
                            </button>
                          </>
                        )}
                      </div>

                    </div>
                  </div>
                ) : id === 'branding' ? (
                  <!-- Branding Vertical Stack Layout -->
                  <div class="branding-vertical-stack space-y-8">
                    {item.images.map((image, index) => (
                      <div class="branding-image-container">
                        <div class="relative group cursor-pointer">
                            <img 
                              src={image.src} 
                              alt={image.alt || `${item.name} image ${index + 1}`}
                              loading={index === 0 ? "eager" : "lazy"}
                              decoding="async"
                              fetchpriority={index === 0 ? "high" : "auto"}
                              class="w-full h-auto object-contain rounded-2xl transition-all duration-500 ease-out group-hover:scale-[1.02]"
                              data-fullview={image.src}
                            />
                          
                          {/* Subtle hover overlay */}
                          <div class="absolute inset-0 bg-black/0 transition-all duration-500 ease-out group-hover:bg-black/3 rounded-2xl"></div>
                          
                          {/* Fullscreen button */}
                          <button 
                            class="fullscreen-btn absolute top-4 right-4 bg-white/95 backdrop-filter backdrop-blur-sm p-2.5 rounded-full shadow-lg opacity-0 group-hover:opacity-100 transition-all duration-300 ease-out hover:bg-white hover:scale-105 hover:shadow-xl z-10"
                            data-fullview={image.src}
                            data-alt={image.alt}
                          >
                            <Maximize2 class="w-5 h-5 text-indigo-600" />
                          </button>
                        </div>
                      </div>
                    ))}
                  </div>
                ) : (
                  <!-- Original Swiper Carousel for other categories -->
                  <div class={`category-swiper-${itemIndex} relative`}>
                    <div class="swiper-container relative rounded-2xl overflow-hidden">
                      <div class="swiper-wrapper">
                        {item.images.map((image, index) => (
                          <div class="swiper-slide">
                            <div class="relative w-full group cursor-pointer">
                              <img 
                                src={image.src} 
                                alt={image.alt || `${item.name} image ${index + 1}`}
                                loading={index === 0 ? "eager" : "lazy"}
                                decoding="async"
                                fetchpriority={index === 0 ? "high" : "auto"}
                                class="w-full h-auto object-contain rounded-2xl transition-all duration-500 ease-out group-hover:scale-[1.02]"
                                data-fullview={image.src}
                              />
                              
                              {/* Controls float over the image */}
                              <div class="absolute inset-0 bg-black/0 transition-all duration-500 ease-out group-hover:bg-black/5 rounded-2xl"></div>
                              
                              {/* Fullscreen button */}
                              <button 
                                class="fullscreen-btn absolute top-4 right-4 bg-white/90 backdrop-filter backdrop-blur-sm p-2.5 rounded-full shadow-lg opacity-0 group-hover:opacity-100 transition-all duration-300 ease-out hover:bg-white hover:scale-105 hover:shadow-xl z-10"
                                data-fullview={image.src}
                                data-alt={image.alt}
                              >
                                <Maximize2 class={`w-5 h-5 ${
                                  id === 'visit-cards' ? 'text-rose-600' : 
                                  id === 'books' ? 'text-emerald-600' : 
                                  id === 'print-media' ? 'text-amber-600' :
                                  id === 'branding' ? 'text-indigo-600' :
                                  id === 'social-media' ? 'text-cyan-600' :
                                  'text-purple-600'
                                }`} />
                              </button>
                            </div>
                          </div>
                        ))}
                      </div>
                      
                      {/* Navigation buttons positioned over the image */}
                      {item.images.length > 1 && (
                        <>
                          <button class={`swiper-button-prev category-nav-btn category-nav-prev-${itemIndex}`}>
                            <ChevronLeft class={`w-7 h-7 ${
                              id === 'visit-cards' ? 'text-rose-600' : 
                              id === 'books' ? 'text-emerald-600' : 
                              id === 'print-media' ? 'text-amber-600' :
                              id === 'branding' ? 'text-indigo-600' :
                              id === 'social-media' ? 'text-cyan-600' :
                              'text-purple-600'
                            }`} />
                          </button>
                          <button class={`swiper-button-next category-nav-btn category-nav-next-${itemIndex}`}>
                            <ChevronRight class={`w-7 h-7 ${
                              id === 'visit-cards' ? 'text-rose-600' : 
                              id === 'books' ? 'text-emerald-600' : 
                              id === 'print-media' ? 'text-amber-600' :
                              id === 'branding' ? 'text-indigo-600' :
                              id === 'social-media' ? 'text-cyan-600' :
                              'text-purple-600'
                            }`} />
                          </button>
                        </>
                      )}

                    </div>
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
      </article>

      <!-- Full-size image viewer -->
      <div id="imageViewer" class="fixed inset-0 bg-black/90 z-50 hidden flex items-center justify-center">
        <button id="closeViewer" class="absolute top-6 right-6 text-white hover:text-gray-300">
          <X class="w-8 h-8" />
        </button>
        <button id="prevImage" class="absolute left-4 md:left-6 top-1/2 -translate-y-1/2 text-white hover:text-gray-300 bg-black/50 hover:bg-black/70 p-3 rounded-full transition-all z-10">
          <ChevronLeft class="w-8 h-8 md:w-10 md:h-10" />
        </button>
        <img id="fullImage" src="" alt="Full size image" class="max-h-[90vh] max-w-[90vw] object-contain" />
        <button id="nextImage" class="absolute right-4 md:right-6 top-1/2 -translate-y-1/2 text-white hover:text-gray-300 bg-black/50 hover:bg-black/70 p-3 rounded-full transition-all z-10">
          <ChevronRight class="w-8 h-8 md:w-10 md:h-10" />
        </button>
      </div>

      <Footer />
    </div>
  </main>
</Layout>

<style>
  /* Branding Vertical Stack Layout */
  .branding-vertical-stack {
    width: 100%;
  }

  /* Mobile responsive for branding */
  @media (max-width: 768px) {
    .branding-vertical-stack {
      gap: 1.5rem;
    }
    
    .branding-image-container img {
      max-height: 60vh !important;
    }
    
    .branding-image-container .fullscreen-btn {
      top: 12px !important;
      right: 12px !important;
      padding: 8px !important;
    }
    
    .branding-image-container .fullscreen-btn .lucide {
      width: 18px !important;
      height: 18px !important;
    }
  }

  /* Social Media Grid Layout - only on desktop */
  @media (min-width: 1024px) {
    .social-media-grid {
      display: grid;
      gap: 16px;
      width: 100%;
      min-height: 500px;
    }
  }

  /* Grid layouts - exactly like the reference image */
  .social-media-grid.images-1 {
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
  }

  .social-media-grid.images-2 {
    grid-template-columns: 2fr 1fr;
    grid-template-rows: 1fr;
  }

  .social-media-grid.images-3 {
    grid-template-columns: 2fr 1fr;
    grid-template-rows: 1fr 1fr;
  }

  .social-media-grid.images-4 {
    grid-template-columns: 2fr 1fr 1fr;
    grid-template-rows: 1fr 1fr;
  }

  .social-media-grid.images-5 {
    grid-template-columns: 2fr 1fr 1fr;
    grid-template-rows: 1fr 1fr;
  }

  /* Grid item positioning */
  .grid-item {
    background: transparent;
  }

  /* First item is always large - spans full height */
  .images-2 .item-1,
  .images-3 .item-1,
  .images-4 .item-1,
  .images-5 .item-1 {
    grid-column: 1;
    grid-row: 1 / -1;
  }

  /* Two images layout */
  .images-2 .item-2 {
    grid-column: 2;
    grid-row: 1;
  }

  /* Three images layout */
  .images-3 .item-2 {
    grid-column: 2;
    grid-row: 1;
  }

  .images-3 .item-3 {
    grid-column: 2;
    grid-row: 2;
  }

  /* Four images layout - 2x2 grid on the right */
  .images-4 .item-2 {
    grid-column: 2;
    grid-row: 1;
  }

  .images-4 .item-3 {
    grid-column: 3;
    grid-row: 1;
  }

  .images-4 .item-4 {
    grid-column: 2;
    grid-row: 2;
  }

  /* Five images layout - 2x2 grid on the right */
  .images-5 .item-2 {
    grid-column: 2;
    grid-row: 1;
  }

  .images-5 .item-3 {
    grid-column: 3;
    grid-row: 1;
  }

  .images-5 .item-4 {
    grid-column: 2;
    grid-row: 2;
  }

  .images-5 .item-5 {
    grid-column: 3;
    grid-row: 2;
  }

  /* Mobile responsive - only applies when grid is visible (desktop) */
  @media (min-width: 1024px) and (max-width: 768px) {
    /* This media query will never match, effectively disabling mobile grid styles */
  }

    /* Swiper Container */
  .swiper-container {
    width: 100%;
  }

  .swiper-slide {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    background: transparent;
  }

  .swiper-slide img {
    transition: transform 0.5s ease-out, filter 0.3s ease-out;
    will-change: transform;
  }

  /* Navigation buttons */
  .category-nav-btn {
    position: absolute !important;
    top: 50% !important;
    transform: translateY(-50%) !important;
    width: 60px !important;
    height: 60px !important;
    background: rgba(255, 255, 255, 0.95) !important;
    backdrop-filter: blur(16px) !important;
    border: none !important;
    border-radius: 50% !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    cursor: pointer !important;
    z-index: 20 !important;
    opacity: 1 !important;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1) !important;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12) !important;
    will-change: transform, opacity !important;
  }

  .category-nav-btn[class*="prev"] {
    left: 24px !important;
  }

  .category-nav-btn[class*="next"] {
    right: 24px !important;
  }

  .category-nav-btn:hover {
    background: rgba(255, 255, 255, 1) !important;
    transform: translateY(-50%) scale(1.05) !important;
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.16) !important;
  }

  .category-nav-btn:active {
    transform: translateY(-50%) scale(0.95) !important;
  }

  /* Remove default swiper button styles */
  .swiper-button-prev:after,
  .swiper-button-next:after {
    display: none !important;
  }



  /* Touch/mobile improvements */
  @media (max-width: 768px) {
    .category-nav-btn {
      opacity: 1 !important;
      width: 40px !important;
      height: 40px !important;
    }
    
    .swiper-pagination {
      opacity: 1;
    }

    .swiper-container {
      border-radius: 0.75rem;
    }
  }

  /* Image loading styles */
  .loading-indicator {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #f3f4f6;
    z-index: 1;
    overflow: hidden;
  }
  
  .loading-indicator::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.6), transparent);
    animation: shimmer 1.5s infinite;
    transform: translateX(-100%);
  }

  img {
    opacity: 0;
    transition: opacity 0.3s ease;
    position: relative;
    z-index: 2;
  }

  img.loaded {
    opacity: 1;
  }

  @keyframes shimmer {
    100% {
      transform: translateX(100%);
    }
  }

  #fullImage {
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  #fullImage.loaded {
    opacity: 1;
  }
</style>

<script>
  import Swiper from 'swiper';
  import { Navigation, Pagination, Autoplay } from 'swiper/modules';
  import 'swiper/css';
  import 'swiper/css/navigation';
  import 'swiper/css/pagination';
  import { preloadImage, getCachedImage } from '../../../utils/imageCache';

  // Color mapping for pagination
  const colorMap: Record<string, string> = {
    'visit-cards': '#e11d48',
    'books': '#059669', 
    'print-media': '#d97706',
    'branding': '#4f46e5',
    'social-media': '#0891b2',
    'catalogs': '#9333ea'
  };

  // Get current category from URL
  const categoryId = window.location.pathname.split('/').pop() || 'catalogs';
  const currentColor = colorMap[categoryId] || '#9333ea';

  document.addEventListener('DOMContentLoaded', () => {
    // Setup image loading and click handlers first
    setupImageLoading();
    setupFullscreenHandlers();

    // Initialize all Swiper instances
    const swiperContainers = document.querySelectorAll('.swiper-container');
    
    swiperContainers.forEach((container, index) => {
      const swiper = new Swiper(container as HTMLElement, {
        modules: [Navigation, Pagination, Autoplay],
        slidesPerView: 1,
        spaceBetween: 0,
        grabCursor: true,
        touchRatio: 1,
        resistance: true,
        resistanceRatio: 0.85,
        loop: container.querySelectorAll('.swiper-slide').length > 1,
        speed: 600,
        autoplay: container.querySelectorAll('.swiper-slide').length > 1 ? {
          delay: 5000,
          disableOnInteraction: false,
          pauseOnMouseEnter: true,
        } : false,
        navigation: {
          nextEl: container.querySelector(`.category-nav-next-${index}`) as HTMLElement,
          prevEl: container.querySelector(`.category-nav-prev-${index}`) as HTMLElement,
        },
        pagination: {
          el: document.querySelector(`.pagination-${categoryId}-${index}`) as HTMLElement,
          clickable: true,
          dynamicBullets: false,
        },
        on: {
          init: function() {
            // Apply colors after initialization
            setTimeout(() => {
              const bullets = container.querySelectorAll('.swiper-pagination-bullet');
              bullets.forEach((bullet: Element) => {
                const htmlBullet = bullet as HTMLElement;
                if (htmlBullet.classList.contains('swiper-pagination-bullet-active')) {
                  htmlBullet.style.backgroundColor = currentColor;
                  htmlBullet.style.borderColor = currentColor;
                }
              });
            }, 100);
          },
          slideChange: function() {
            // Reapply colors on slide change
            const bullets = container.querySelectorAll('.swiper-pagination-bullet');
            bullets.forEach((bullet: Element) => {
              const htmlBullet = bullet as HTMLElement;
              if (htmlBullet.classList.contains('swiper-pagination-bullet-active')) {
                htmlBullet.style.backgroundColor = currentColor;
                htmlBullet.style.borderColor = currentColor;
              } else {
                htmlBullet.style.backgroundColor = 'rgba(255, 255, 255, 0.6)';
                htmlBullet.style.borderColor = 'rgba(255, 255, 255, 0.8)';
              }
            });
          }
        }
      });
    });
  });

  // Setup image loading and click handlers
  function setupImageLoading() {
    document.querySelectorAll('img[data-fullview]').forEach(img => {
      // Create and add loading indicator
      const parent = img.parentElement;
      if (parent && !parent.querySelector('.loading-indicator')) {
        // Add a loading indicator div
        const loadingDiv = document.createElement('div');
        loadingDiv.className = 'loading-indicator';
        parent.appendChild(loadingDiv);
        
        // Handler to remove loading indicator
        const removeLoading = () => {
          img.classList.add('loaded');
          loadingDiv.remove();
        };
        
        // Add load event to remove loading state
        img.addEventListener('load', removeLoading);
        
        // For already loaded images
        if ((img as HTMLImageElement).complete) {
          removeLoading();
        }
      }
    });
  }

  // Initialize image viewers for all images with data-fullview
  let currentImages: string[] = [];
  let currentIndex = 0;
  
  // Setup touch variables
  let touchStartX = 0;
  let touchEndX = 0;
  
  // Handle swipe direction
  function handleSwipe() {
    const viewer = document.getElementById('imageViewer');
    if (viewer && !viewer.classList.contains('hidden') && currentImages.length > 1) {
      const swipeThreshold = 50;
      const swipeDistance = touchEndX - touchStartX;
      
      if (swipeDistance < -swipeThreshold) {
        currentIndex = (currentIndex + 1) % currentImages.length;
        updateViewerImage();
      } else if (swipeDistance > swipeThreshold) {
        currentIndex = (currentIndex - 1 + currentImages.length) % currentImages.length;
        updateViewerImage();
      }
    }
  }
  
  // Setup touch events for fullscreen navigation
  function setupTouchEvents() {
    const fullImage = document.getElementById('fullImage');
    if (fullImage) {
      fullImage.removeEventListener('touchstart', handleTouchStart);
      fullImage.removeEventListener('touchend', handleTouchEnd);
      
      fullImage.addEventListener('touchstart', handleTouchStart, { passive: true });
      fullImage.addEventListener('touchend', handleTouchEnd, { passive: true });
    }
  }
  
  // Touch event handlers
  function handleTouchStart(e: TouchEvent) {
    touchStartX = e.changedTouches[0].screenX;
  }
  
  function handleTouchEnd(e: TouchEvent) {
    touchEndX = e.changedTouches[0].screenX;
    handleSwipe();
  }

  // Setup click handlers for both images and fullscreen buttons
  function setupFullscreenHandlers() {
    document.querySelectorAll('img[data-fullview]').forEach(img => {
      img.addEventListener('click', () => {
        openFullscreenViewer(img as HTMLImageElement);
      });
    });

    document.querySelectorAll('.fullscreen-btn').forEach(btn => {
      btn.addEventListener('click', (e) => {
        e.stopPropagation();
        const container = btn.closest('.group, .relative');
        if (container) {
          const img = container.querySelector('img[data-fullview]') as HTMLImageElement;
          if (img) {
            openFullscreenViewer(img);
          }
        }
      });
    });
  }

  // Function to open fullscreen viewer
  function openFullscreenViewer(img: HTMLImageElement) {
    const fullview = img.getAttribute('data-fullview');
    const viewer = document.getElementById('imageViewer');
    const fullImage = document.getElementById('fullImage') as HTMLImageElement;
    
    if (fullview && viewer && fullImage) {
      fullImage.classList.remove('loaded');
      
      // Find the container that contains this image
      const swiperContainer = img.closest('[class*="category-swiper"]');
      const brandingContainer = img.closest('.branding-vertical-stack');
      const socialGridContainer = img.closest('.social-media-grid');
      const socialContainer = img.closest('.social-media-container');
      
      currentImages = [];
      
      if (swiperContainer) {
        // Handle swiper containers (catalogs, books, print-media, visit-cards, social-media mobile)
        swiperContainer.querySelectorAll('img[data-fullview]').forEach(itemImg => {
          const imgSrc = itemImg.getAttribute('data-fullview');
          if (imgSrc) {
            currentImages.push(imgSrc);
          }
        });
      } else if (brandingContainer) {
        // Handle branding vertical stack
        brandingContainer.querySelectorAll('img[data-fullview]').forEach(itemImg => {
          const imgSrc = itemImg.getAttribute('data-fullview');
          if (imgSrc) {
            currentImages.push(imgSrc);
          }
        });
      } else if (socialGridContainer) {
        // Handle social media grid (desktop only)
        socialGridContainer.querySelectorAll('img[data-fullview]').forEach(itemImg => {
          const imgSrc = itemImg.getAttribute('data-fullview');
          if (imgSrc) {
            currentImages.push(imgSrc);
          }
        });
      } else if (socialContainer) {
        // Handle social media container - get images from the visible layout only
        const isDesktop = window.innerWidth >= 1024;
        const targetContainer = isDesktop 
          ? socialContainer.querySelector('.social-media-grid')
          : socialContainer.querySelector('[class*="category-swiper"]');
        
        if (targetContainer) {
          targetContainer.querySelectorAll('img[data-fullview]').forEach(itemImg => {
            const imgSrc = itemImg.getAttribute('data-fullview');
            if (imgSrc) {
              currentImages.push(imgSrc);
            }
          });
        }
      } else {
        // Fallback: find all images in the current catalog item, but avoid duplicates
        const catalogItem = img.closest('.catalog-item');
        if (catalogItem) {
          const seenImages = new Set();
          catalogItem.querySelectorAll('img[data-fullview]').forEach(itemImg => {
            const imgSrc = itemImg.getAttribute('data-fullview');
            if (imgSrc && !seenImages.has(imgSrc)) {
              seenImages.add(imgSrc);
              currentImages.push(imgSrc);
            }
          });
        }
      }
      
      currentIndex = currentImages.indexOf(fullview);
      
      fullImage.src = fullview;
      fullImage.alt = img.alt;
      
      fullImage.onload = () => {
        fullImage.classList.add('loaded');
        setupTouchEvents();
      };
      
      if (fullImage.complete) {
        fullImage.classList.add('loaded');
        setupTouchEvents();
      }
      
      viewer.classList.remove('hidden');
      viewer.classList.add('flex');
      
      document.body.style.overflow = 'hidden';

      const prevButton = document.getElementById('prevImage');
      const nextButton = document.getElementById('nextImage');
      if (prevButton && nextButton) {
        if (currentImages.length <= 1) {
          prevButton.style.display = 'none';
          nextButton.style.display = 'none';
        } else {
          prevButton.style.display = '';
          nextButton.style.display = '';
        }
      }
    }
  }

  // Function to update the viewer image based on current index
  async function updateViewerImage() {
    const fullImage = document.getElementById('fullImage') as HTMLImageElement;
    
    if (fullImage && currentImages[currentIndex]) {
      fullImage.classList.remove('loaded');
      
      const cachedResponse = await getCachedImage(currentImages[currentIndex]);
      if (cachedResponse) {
        const blob = await cachedResponse.blob();
        const objectUrl = URL.createObjectURL(blob);
        fullImage.src = objectUrl;
        fullImage.classList.add('loaded');
        fullImage.onload = () => {
          URL.revokeObjectURL(objectUrl);
          // Only preload adjacent images, don't preload current again
          preloadAdjacentImages();
        };
      } else {
        fullImage.src = currentImages[currentIndex];
        fullImage.onload = async () => {
          fullImage.classList.add('loaded');
          // Don't preload current image since we just loaded it
          preloadAdjacentImages();
        };
      }
      
      document.querySelectorAll('img[data-fullview]').forEach(img => {
        if (img.getAttribute('data-fullview') === currentImages[currentIndex]) {
          fullImage.alt = (img as HTMLImageElement).alt;
        }
      });
    }
  }

  // Function to preload only adjacent images (more conservative)
  async function preloadAdjacentImages() {
    if (currentImages.length <= 1) return;
    
    const nextIndex = (currentIndex + 1) % currentImages.length;
    const prevIndex = (currentIndex - 1 + currentImages.length) % currentImages.length;
    
    // Only preload if not already cached to avoid unnecessary network requests
    const preloadPromises = [];
    
    if (nextIndex !== currentIndex) {
      preloadPromises.push(preloadImage(currentImages[nextIndex]));
    }
    
    if (prevIndex !== currentIndex && prevIndex !== nextIndex) {
      preloadPromises.push(preloadImage(currentImages[prevIndex]));
    }
    
    await Promise.all(preloadPromises);
  }

  // Setup navigation handlers
  document.getElementById('prevImage')?.addEventListener('click', () => {
    if (currentImages.length > 1) {
      currentIndex = (currentIndex - 1 + currentImages.length) % currentImages.length;
      updateViewerImage();
    }
  });
  
  document.getElementById('nextImage')?.addEventListener('click', () => {
    if (currentImages.length > 1) {
      currentIndex = (currentIndex + 1) % currentImages.length;
      updateViewerImage();
    }
  });
  
  // Close viewer
  document.getElementById('closeViewer')?.addEventListener('click', () => {
    const viewer = document.getElementById('imageViewer');
    if (viewer) {
      viewer.classList.add('hidden');
      viewer.classList.remove('flex');
      document.body.style.overflow = '';
    }
  });
  
  // Keyboard navigation
  document.addEventListener('keydown', (e) => {
    const viewer = document.getElementById('imageViewer');
    if (viewer && !viewer.classList.contains('hidden')) {
      if (e.key === 'Escape') {
        viewer.classList.add('hidden');
        viewer.classList.remove('flex');
        document.body.style.overflow = '';
      } else if (e.key === 'ArrowLeft') {
        if (currentImages.length > 1) {
          currentIndex = (currentIndex - 1 + currentImages.length) % currentImages.length;
          updateViewerImage();
        }
      } else if (e.key === 'ArrowRight') {
        if (currentImages.length > 1) {
          currentIndex = (currentIndex + 1) % currentImages.length;
          updateViewerImage();
        }
      }
    }
  });

  // Initial setup - moved to DOMContentLoaded
</script> 