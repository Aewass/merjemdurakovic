---
import { ArrowRight } from 'lucide-astro';
import type { Project } from '../types';

interface Props extends Project {}

const { number, category, title, description, tags, color, images } = Astro.props;

const colorClasses = {
  purple: {
    text: "text-purple-600",
    border: "border-purple-200",
    shadow: "shadow-purple-200/20",
    gradient: "from-purple-400/20 to-purple-200/20",
    tag: "bg-purple-50"
  },
  rose: {
    text: "text-rose-600",
    border: "border-rose-200",
    shadow: "shadow-rose-200/20",
    gradient: "from-rose-400/20 to-rose-200/20",
    tag: "bg-rose-50"
  },
  emerald: {
    text: "text-emerald-600",
    border: "border-emerald-200",
    shadow: "shadow-emerald-200/20",
    gradient: "from-emerald-400/20 to-emerald-200/20",
    tag: "bg-emerald-50"
  }
};
---

<div class="grid grid-cols-1 md:grid-cols-2 gap-12 items-center">
  {/* Project Info - Left Side */}
  <div>
    <span class={`${colorClasses[color].text} mb-4 block flex items-center gap-2`}>
      <span class="font-mono">{number}</span>
      <span class="text-gray-300">â€”</span>
      <span>{category}</span>
    </span>
    
    <h3 class="text-4xl font-bold mb-4">{title}</h3>
    <p class="text-gray-600 text-lg mb-8 max-w-2xl">{description}</p>
    
    {/* Tags */}
    <div class="flex flex-wrap gap-3 mb-8">
      {tags.map(tag => (
        <span class={`
          px-4 
          py-2 
          ${colorClasses[color].tag}
          rounded-full 
          text-gray-900
          flex
          items-center
          gap-2
          text-sm
        `}>
          <span class="w-1 h-1 rounded-full bg-current opacity-40"></span>
          {tag}
        </span>
      ))}
    </div>

    {/* Case Study Link */}
    <a 
      href={`/case-study/${number}`}
      class="
        inline-flex 
        items-center 
        gap-2 
        text-gray-900 
        hover:text-gray-600 
        transition-colors 
        duration-300
        group
      "
    >
      <span class="text-lg font-medium">View Case Study</span>
      <ArrowRight class="w-5 h-5 transform group-hover:translate-x-1 transition-transform duration-300" />
    </a>
  </div>

  {/* Project Image - Right Side */}
  <a 
    href={`/case-study/${number}`}
    class="relative perspective-1000 group/image block"
  >
    <div class={`
      card-container
      aspect-[4/3] 
      bg-white 
      rounded-none
      shadow-lg
      overflow-hidden 
      relative
      border-2 
      ${colorClasses[color].border}
      ${colorClasses[color].shadow}
      transform-gpu
      transition-all
      duration-500
      ease-out
      hover:scale-[1.02]
      hover:shadow-2xl
      hover:-translate-y-2
      group/card
      cursor-pointer
    `}>
      <div class="w-full h-full relative overflow-hidden">
        <img 
          src={images[0].src} 
          alt={images[0].alt} 
          class="w-full h-full object-cover transform transition-all duration-700 ease-out group-hover/card:scale-110"
        />
        
        {/* Hover Overlay with View Case Study */}
        <div class="absolute inset-0 opacity-0 group-hover/card:opacity-100 transition-opacity duration-500 ease-out flex items-center justify-center">
          <div class="absolute inset-0 bg-gradient-to-t from-black/60 via-black/30 to-transparent"></div>
          <div class="relative text-white flex items-center gap-2 font-medium">
            <span>View Case Study</span>
            <ArrowRight class="w-5 h-5" />
          </div>
        </div>
      </div>
    </div>
    
    {/* Background Glow */}
    <div class={`
      absolute 
      -z-10 
      inset-0 
      bg-gradient-to-r 
      ${colorClasses[color].gradient} 
      blur-3xl 
      opacity-0 
      group-hover/card:opacity-60 
      transition-opacity 
      duration-700
      ease-out
    `}></div>
  </a>
</div>

<style>
  .perspective-1000 {
    perspective: 1000px;
  }

  .card-container {
    transform-style: preserve-3d;
    backface-visibility: hidden;
  }

  /* Smooth hover state transitions */
  .card-container,
  .card-container * {
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  }
</style> 