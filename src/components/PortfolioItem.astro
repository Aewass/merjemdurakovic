---
import { ArrowRight } from 'lucide-astro';
import { preloadImages } from '../utils/imageCache';
import { getLangFromUrl, useTranslations, useTranslatedPath } from '../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);

interface Props {
  number: string;
  title: string;
  titleImage: string;
  color: 'purple' | 'rose' | 'emerald' | 'amber' | 'indigo' | 'cyan' | 'pink' | 'orange';
  name?: string;
}

const { number, title, color, titleImage, name = "" } = Astro.props;

const colorClasses = {
  purple: {
    text: "text-purple-600",
    border: "border-purple-200",
    shadow: "shadow-purple-200/20",
    gradient: "from-purple-400/20 to-purple-200/20",
    tag: "bg-purple-50",
    button: "bg-purple-600 hover:bg-purple-700"
  },
  rose: {
    text: "text-rose-600",
    border: "border-rose-200",
    shadow: "shadow-rose-200/20",
    gradient: "from-rose-400/20 to-rose-200/20",
    tag: "bg-rose-50",
    button: "bg-rose-600 hover:bg-rose-700"
  },
  emerald: {
    text: "text-emerald-600",
    border: "border-emerald-200",
    shadow: "shadow-emerald-200/20",
    gradient: "from-emerald-400/20 to-emerald-200/20",
    tag: "bg-emerald-50",
    button: "bg-emerald-600 hover:bg-emerald-700"
  },
  amber: {
    text: "text-amber-600",
    border: "border-amber-200",
    shadow: "shadow-amber-200/20",
    gradient: "from-amber-400/20 to-amber-200/20",
    tag: "bg-amber-50",
    button: "bg-amber-600 hover:bg-amber-700"
  },
  indigo: {
    text: "text-indigo-600",
    border: "border-indigo-200",
    shadow: "shadow-indigo-200/20",
    gradient: "from-indigo-400/20 to-indigo-200/20",
    tag: "bg-indigo-50",
    button: "bg-indigo-600 hover:bg-indigo-700"
  },
  cyan: {
    text: "text-cyan-600",
    border: "border-cyan-200",
    shadow: "shadow-cyan-200/20",
    gradient: "from-cyan-400/20 to-cyan-200/20",
    tag: "bg-cyan-50",
    button: "bg-cyan-600 hover:bg-cyan-700"
  },
  pink: {
    text: "text-pink-600",
    border: "border-pink-200",
    shadow: "shadow-pink-200/20",
    gradient: "from-pink-400/20 to-pink-200/20",
    tag: "bg-pink-50",
    button: "bg-pink-600 hover:bg-pink-700"
  },
  orange: {
    text: "text-orange-600",
    border: "border-orange-200",
    shadow: "shadow-orange-200/20",
    gradient: "from-orange-400/20 to-orange-200/20",
    tag: "bg-orange-50",
    button: "bg-orange-600 hover:bg-orange-700"
  }
};

---

<div class="space-y-8">
  {/* Header Section */}
  <div class="flex items-center justify-between gap-4">
    <div class="flex-1">
      <span class={`${colorClasses[color].text} mb-3 block flex items-center gap-2 text-sm sm:text-base`}>
        <span class="font-mono">{number}</span>
        <span class="text-gray-300">â€”</span>
        <span>{t('portfolio.category')}</span>
      </span>
      
      <a href={translatePath(`/category/${name}`)} class="block group" style={`--hover-color: ${color === 'purple' ? '#9333ea' : color === 'rose' ? '#e11d48' : color === 'emerald' ? '#059669' : color === 'amber' ? '#d97706' : color === 'indigo' ? '#4f46e5' : color === 'pink' ? '#db2777' : color === 'orange' ? '#ea580c' : '#0891b2'}`}>
        <h3 class="text-2xl sm:text-3xl lg:text-4xl font-bold cursor-pointer transition-all duration-300 hover-title">
          {title}
        </h3>
      </a>
    </div>

    {/* View Category Button */}
    <a
      href={translatePath(`/category/${name}`)}
      class={`
        inline-flex
        items-center
        gap-2
        ${colorClasses[color].text}
        font-medium
        text-base
        sm:text-lg
        hover:opacity-80
        transition-all
        duration-300
        group
        flex-shrink-0
        self-end
      `}
    >
      <span>{t('portfolio.view_category')}</span>
      <ArrowRight class="w-4 h-4 sm:w-5 sm:h-5 group-hover:translate-x-1 transition-transform duration-300" />
    </a>
  </div>

  {/* Portfolio Image */}
  {titleImage && (
    <div class="portfolio-image-container relative group cursor-pointer">
      <a href={translatePath(`/category/${name}`)} class="block">
        <div class="aspect-[4/3] rounded-2xl overflow-hidden relative">
          <img 
            src={titleImage} 
            alt={titleImage} 
            loading="lazy"
            decoding="async"
            class="w-full h-full object-cover transition-all duration-300 group-hover:scale-105"
          />          
          
          {/* Hover overlay with View Category button */}
          <div class="absolute inset-0 bg-black/60 backdrop-blur-sm opacity-0 group-hover:opacity-100 transition-all duration-300 flex items-center justify-center">
            <div class={`
              ${colorClasses[color].button}
              text-white
              px-6
              py-3
              rounded-lg
              font-medium
              text-lg
              inline-flex
              items-center
              gap-2
              transition-all
              duration-300
              transform
              translate-y-2
              group-hover:translate-y-0
              shadow-lg
            `}>
              <span>{t('portfolio.view_category')}</span>
              <ArrowRight class="w-5 h-5" />
            </div>
          </div>
        </div>
      </a>
    </div>
  )}
</div>

<style>
  .portfolio-image-container {
    background: linear-gradient(135deg, #f1f3f4 0%, #e8eaed 50%, #dadce0 100%);
    border-radius: 1rem;
    box-shadow: 
      0 4px 6px -1px rgba(0, 0, 0, 0.1), 
      0 2px 4px -1px rgba(0, 0, 0, 0.06),
      inset 0 1px 0 rgba(255, 255, 255, 0.1);
  }

  .portfolio-image-container img {
    transition: transform 0.3s ease-out, filter 0.15s ease-out;
    will-change: transform, filter;
  }

  .portfolio-image-container:hover img {
    filter: brightness(0.9);
  }

  .hover-title:hover {
    color: var(--hover-color);
  }

  /* Mobile optimizations */
  @media (max-width: 768px) {
    .portfolio-image-container {
      border-radius: 0.75rem;
    }
  }
</style> 